// DestinationPanel.java
// Author  Winston Prakash

package com.nayaware.netinstaller;

import java.io.*;
import javax.swing.*;


public class DestinationPanel extends WizardPanel {
    
    String descriptionText="Enter the directory where you want to install Forte for Java";
    String inputLabelText="Install Directory";
    String browseButtonLabel="Browse..";
    
    String forteHome="";
    
    /** Creates new form DestinationPanel */
    public DestinationPanel() {
        initComponents();
        String os = System.getProperty("os.name");
        if (os.startsWith("Windows")){
            forteHome="C:\\forte4j";
        } else if (os.startsWith("SunOS")){
            forteHome="/opt/forte4j";
        } else {//linux
            forteHome="/usr/local/forte4j";
        }
        inputTextField.setText(forteHome);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        descTextArea = new javax.swing.JTextArea();
        inputPanel = new javax.swing.JPanel();
        inputLabel = new javax.swing.JLabel();
        inputTextField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        dummyPanel = new javax.swing.JPanel();

        descTextArea.setBackground(new java.awt.Color(204, 204, 204));
        descTextArea.setEditable(false);
        descTextArea.setLineWrap(true);
        descTextArea.setRows(4);
        descTextArea.setText(descriptionText);
        descTextArea.setWrapStyleWord(true);
        descTextArea.setMargin(new java.awt.Insets(10, 10, 10, 10));
        add(descTextArea, java.awt.BorderLayout.NORTH);

        inputPanel.setLayout(new java.awt.GridBagLayout());

        inputPanel.setPreferredSize(new java.awt.Dimension(430, 200));
        inputLabel.setText(inputLabelText);
        inputPanel.add(inputLabel, new java.awt.GridBagConstraints());

        inputTextField.setMinimumSize(new java.awt.Dimension(250, 25));
        inputTextField.setPreferredSize(new java.awt.Dimension(250, 25));
        inputPanel.add(inputTextField, new java.awt.GridBagConstraints());

        browseButton.setText(browseButtonLabel);
        browseButton.setMinimumSize(new java.awt.Dimension(107, 25));
        browseButton.setPreferredSize(new java.awt.Dimension(100, 25));
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        inputPanel.add(browseButton, new java.awt.GridBagConstraints());

        add(inputPanel, java.awt.BorderLayout.CENTER);

        dummyPanel.setPreferredSize(new java.awt.Dimension(450, 100));
        add(dummyPanel, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents
    
    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        Object obj = evt.getSource();
        if(obj instanceof javax.swing.JButton) {
            javax.swing.JFileChooser chooser = new javax.swing.JFileChooser();
            chooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
            File currDir = new File(forteHome);
            File parent = currDir.getParentFile();
            if(parent != null) currDir=parent;
            chooser.setCurrentDirectory(currDir);
            chooser.setSelectedFile(new File(inputTextField.getText()));
            //int returnVal = chooser.showOpenDialog(new javax.swing.JFrame());
            int returnVal = chooser.showOpenDialog(DestinationPanel.this);
            if(returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
                inputTextField.setText(chooser.getSelectedFile().getAbsolutePath());
                forteHome=inputTextField.getText();
            }
        }
    }//GEN-LAST:event_browseButtonActionPerformed
    
    public boolean queryExit(){
        String message = "";
        String title = "Destination Directory!";
        forteHome=inputTextField.getText().trim();
        File forteDir = new File(forteHome);
        if (forteDir.exists()){
            if (!forteDir.isDirectory()) {
                message ="Specified Install Directory is invalid";
                JOptionPane.showMessageDialog(this, message, title, JOptionPane.ERROR_MESSAGE);
                return false;
            }
            if (!(forteDir.canWrite())) {
                message = "Specified Install Directory has no write permission";
                return false;
            }
        }else{
            message ="Install Directory doesnot exists. Create?";
            int selectedValue = JOptionPane.showConfirmDialog(this, message, title, JOptionPane.YES_NO_OPTION);
            if (selectedValue == JOptionPane.YES_OPTION){
                if(!forteDir.mkdirs()){
                    message ="Could not create Install Directory !";
                    JOptionPane.showMessageDialog(this, message, title, JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            }
        }
        System.getProperties().put("forteHome",forteHome);
        return true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel dummyPanel;
    private javax.swing.JTextField inputTextField;
    private javax.swing.JButton browseButton;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JTextArea descTextArea;
    private javax.swing.JLabel inputLabel;
    // End of variables declaration//GEN-END:variables
    
}
